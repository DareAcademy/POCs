// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using POCs.data;

#nullable disable

namespace POCs.Migrations
{
    [DbContext(typeof(pocContext))]
    [Migration("20230218070135_v2")]
    partial class v2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("POCs.data.Course_days", b =>
                {
                    b.Property<int>("Section_Id")
                        .HasColumnType("int");

                    b.Property<int>("day")
                        .HasColumnType("int");

                    b.HasKey("Section_Id", "day");

                    b.ToTable("course_days");
                });

            modelBuilder.Entity("POCs.data.Course_Sections", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("course_Sections");
                });

            modelBuilder.Entity("POCs.data.Courses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("POCs.data.Plan_Items", b =>
                {
                    b.Property<int>("Plan_Id")
                        .HasColumnType("int");

                    b.Property<int>("Course_Id")
                        .HasColumnType("int");

                    b.Property<int>("courseId")
                        .HasColumnType("int");

                    b.Property<int>("planId")
                        .HasColumnType("int");

                    b.HasKey("Plan_Id", "Course_Id");

                    b.HasIndex("courseId");

                    b.HasIndex("planId");

                    b.ToTable("Plan_Items");
                });

            modelBuilder.Entity("POCs.data.Plans", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("POCs.data.Course_days", b =>
                {
                    b.HasOne("POCs.data.Course_Sections", "sections")
                        .WithMany("lidays")
                        .HasForeignKey("Section_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("sections");
                });

            modelBuilder.Entity("POCs.data.Plan_Items", b =>
                {
                    b.HasOne("POCs.data.Courses", "course")
                        .WithMany("liPlan_Items")
                        .HasForeignKey("courseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("POCs.data.Plans", "plan")
                        .WithMany("liPlan_Items")
                        .HasForeignKey("planId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("course");

                    b.Navigation("plan");
                });

            modelBuilder.Entity("POCs.data.Course_Sections", b =>
                {
                    b.Navigation("lidays");
                });

            modelBuilder.Entity("POCs.data.Courses", b =>
                {
                    b.Navigation("liPlan_Items");
                });

            modelBuilder.Entity("POCs.data.Plans", b =>
                {
                    b.Navigation("liPlan_Items");
                });
#pragma warning restore 612, 618
        }
    }
}
